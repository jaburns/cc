#pragma once
#include "inc.hh"
namespace a {

typedef simde_uint8x8_t u8x8;
typedef simde_uint8x16_t u8x16;
typedef simde_uint16x4_t u16x4;
typedef simde_uint16x8_t u16x8;
typedef simde_uint32x2_t u32x2;
typedef simde_uint32x4_t u32x4;
typedef simde_uint64x1_t u64x1;
typedef simde_uint64x2_t u64x2;

typedef simde_int8x8_t i8x8;
typedef simde_int8x16_t i8x16;
typedef simde_int16x4_t i16x4;
typedef simde_int16x8_t i16x8;
typedef simde_int32x2_t i32x2;
typedef simde_int32x4_t i32x4;
typedef simde_int64x1_t i64x1;
typedef simde_int64x2_t i64x2;

typedef simde_float16x4_t f16x4;
typedef simde_float16x8_t f16x8;
typedef simde_float32x2_t f32x2;
typedef simde_float32x4_t f32x4;
typedef simde_float64x1_t f64x1;
typedef simde_float64x2_t f64x2;

// --- convert / reinterpret ---

#define u64_from_u8x8(x) ((u64)simde_vreinterpret_u64_u8(x))
#define u16x8_from_u8x16 simde_vreinterpretq_u16_u8
#define u8x16_from_u16x8 simde_vreinterpretq_u8_u16
#define i32x2_from_f32x2 simde_vcvt_s32_f32
#define f32x2_from_i32x2 simde_vcvt_f32_s32
#define u32x2_from_f32x2 simde_vcvt_u32_f32
#define f32x2_from_u32x2 simde_vcvt_f32_u32
#define i32x4_from_f32x4 simde_vcvtq_s32_f32
#define f32x4_from_i32x4 simde_vcvtq_f32_s32
#define u32x4_from_f32x4 simde_vcvtq_u32_f32
#define f32x4_from_u32x4 simde_vcvtq_f32_u32

// --- 8-bit ---

#define u8x8_load simde_vld1_u8
#define u8x8_store simde_vst1_u8
#define u8x8_splat simde_vdup_n_u8
#define u8x8_add simde_vadd_u8
#define u8x8_sub simde_vsub_u8
#define u8x8_mul simde_vmul_u8
#define u8x8_min simde_vmin_u8
#define u8x8_max simde_vmax_u8
#define u8x8_add_pairs simde_vpadd_u8
#define u8x8_reverse64 simde_vrev64_u8
#define u8x8_and simde_vand_u8
#define u8x8_or simde_vorr_u8
#define u8x8_xor simde_veor_u8
#define u8x8_swizzle simde_vqtbl1_u8
#define u8x8_get_lane simde_vget_lane_u8
#define u8x8_set_lane simde_vset_lane_u8
#define u8x8_extract simde_vext_u8
#define u8x8_select simde_vbsl_u8
#define u8x8_add_across simde_vaddv_u8
#define u8x8_max_across simde_vmaxv_u8
#define u8x8_min_across simde_vminv_u8
#define u8x8_equal simde_vceq_u8
#define u8x8_less_than simde_vclt_u8
#define u8x8_greater_than simde_vcgt_u8
#define u8x8_widen simde_vmovl_u8
#define u8x8_combine simde_vcombine_u8

#define u8x16_load simde_vld1q_u8
#define u8x16_store simde_vst1q_u8
#define u8x16_splat simde_vdupq_n_u8
#define u8x16_add simde_vaddq_u8
#define u8x16_sub simde_vsubq_u8
#define u8x16_mul simde_vmulq_u8
#define u8x16_min simde_vminq_u8
#define u8x16_max simde_vmaxq_u8
#define u8x16_add_pairs simde_vpaddq_u8
#define u8x16_reverse64 simde_vrev64q_u8
#define u8x16_and simde_vandq_u8
#define u8x16_or simde_vorrq_u8
#define u8x16_xor simde_veorq_u8
#define u8x16_swizzle simde_vqtbl1q_u8
#define u8x16_get_lane simde_vgetq_lane_u8
#define u8x16_set_lane simde_vsetq_lane_u8
#define u8x16_extract simde_vextq_u8
#define u8x16_select simde_vbslq_u8
#define u8x16_add_across simde_vaddvq_u8
#define u8x16_max_across simde_vmaxvq_u8
#define u8x16_min_across simde_vminvq_u8
#define u8x16_equal simde_vceqq_u8
#define u8x16_less_than simde_vcltq_u8
#define u8x16_greater_than simde_vcgtq_u8
#define u8x16_get_low simde_vget_low_u8
#define u8x16_get_high simde_vget_high_u8

#define i8x8_load simde_vld1_s8
#define i8x8_store simde_vst1_s8
#define i8x8_splat simde_vdup_n_s8
#define i8x8_add simde_vadd_s8
#define i8x8_sub simde_vsub_s8
#define i8x8_mul simde_vmul_s8
#define i8x8_min simde_vmin_s8
#define i8x8_max simde_vmax_s8
#define i8x8_add_pairs simde_vpadd_s8
#define i8x8_reverse64 simde_vrev64_s8
#define i8x8_and simde_vand_s8
#define i8x8_or simde_vorr_s8
#define i8x8_xor simde_veor_s8
#define i8x8_swizzle simde_vqtbl1_s8
#define i8x8_get_lane simde_vget_lane_s8
#define i8x8_set_lane simde_vset_lane_s8
#define i8x8_extract simde_vext_s8
#define i8x8_select simde_vbsl_s8
#define i8x8_add_across simde_vaddv_s8
#define i8x8_max_across simde_vmaxv_s8
#define i8x8_min_across simde_vminv_s8
#define i8x8_equal simde_vceq_s8
#define i8x8_less_than simde_vclt_s8
#define i8x8_greater_than simde_vcgt_s8
#define i8x8_combine simde_vcombine_s8
#define i8x8_abs simde_vabs_s8
#define i8x8_negate simde_vneg_s8

#define i8x16_load simde_vld1q_s8
#define i8x16_store simde_vst1q_s8
#define i8x16_splat simde_vdupq_n_s8
#define i8x16_add simde_vaddq_s8
#define i8x16_sub simde_vsubq_s8
#define i8x16_mul simde_vmulq_s8
#define i8x16_min simde_vminq_s8
#define i8x16_max simde_vmaxq_s8
#define i8x16_add_pairs simde_vpaddq_s8
#define i8x16_reverse64 simde_vrev64q_s8
#define i8x16_and simde_vandq_s8
#define i8x16_or simde_vorrq_s8
#define i8x16_xor simde_veorq_s8
#define i8x16_swizzle simde_vqtbl1q_s8
#define i8x16_get_lane simde_vgetq_lane_s8
#define i8x16_set_lane simde_vsetq_lane_s8
#define i8x16_extract simde_vextq_s8
#define i8x16_select simde_vbslq_s8
#define i8x16_add_across simde_vaddvq_s8
#define i8x16_max_across simde_vmaxvq_s8
#define i8x16_min_across simde_vminvq_s8
#define i8x16_equal simde_vceqq_s8
#define i8x16_less_than simde_vcltq_s8
#define i8x16_greater_than simde_vcgtq_s8
#define i8x16_get_low simde_vget_low_s8
#define i8x16_get_high simde_vget_high_s8
#define i8x16_abs simde_vabsq_s8
#define i8x16_negate simde_vnegq_s8

#define u8x8_nonzero_lane(x) (u64_count_leading_zeroes(u64_from_u8x8(u8x8_reverse64(x))) / 8)
#define u8x16_nonzero_lane(x) (u64_count_leading_zeroes(u64_bit_reverse(u64_from_u8x8(u16x8_shrn(u16x8_from_u8x16(x), 4)))) / 4)
#define u8x16_shift_lanes(x, n) (u8x16_extract((x), u8x16_splat(0), (n)))

// --- 16-bit ---

#define u16x4_load simde_vld1_u16
#define u16x4_store simde_vst1_u16
#define u16x4_splat simde_vdup_n_u16
#define u16x4_add simde_vadd_u16
#define u16x4_sub simde_vsub_u16
#define u16x4_mul simde_vmul_u16
#define u16x4_min simde_vmin_u16
#define u16x4_max simde_vmax_u16
#define u16x4_scale simde_vmul_n_u16
#define u16x4_add_pairs simde_vpadd_u16
#define u16x4_reverse64 simde_vrev64_u16
#define u16x4_and simde_vand_u16
#define u16x4_or simde_vorr_u16
#define u16x4_xor simde_veor_u16
#define u16x4_get_lane simde_vget_lane_u16
#define u16x4_set_lane simde_vset_lane_u16
#define u16x4_extract simde_vext_u16
#define u16x4_select simde_vbsl_u16
#define u16x4_add_across simde_vaddv_u16
#define u16x4_max_across simde_vmaxv_u16
#define u16x4_min_across simde_vminv_u16
#define u16x4_equal simde_vceq_u16
#define u16x4_less_than simde_vclt_u16
#define u16x4_greater_than simde_vcgt_u16
#define u16x4_widen simde_vmovl_u16
#define u16x4_combine simde_vcombine_u16

#define u16x8_load simde_vld1q_u16
#define u16x8_store simde_vst1q_u16
#define u16x8_splat simde_vdupq_n_u16
#define u16x8_add simde_vaddq_u16
#define u16x8_sub simde_vsubq_u16
#define u16x8_mul simde_vmulq_u16
#define u16x8_min simde_vminq_u16
#define u16x8_max simde_vmaxq_u16
#define u16x8_scale simde_vmulq_n_u16
#define u16x8_add_pairs simde_vpaddq_u16
#define u16x8_reverse64 simde_vrev64q_u16
#define u16x8_and simde_vandq_u16
#define u16x8_or simde_vorrq_u16
#define u16x8_xor simde_veorq_u16
#define u16x8_get_lane simde_vgetq_lane_u16
#define u16x8_set_lane simde_vsetq_lane_u16
#define u16x8_extract simde_vextq_u16
#define u16x8_select simde_vbslq_u16
#define u16x8_add_across simde_vaddvq_u16
#define u16x8_max_across simde_vmaxvq_u16
#define u16x8_min_across simde_vminvq_u16
#define u16x8_equal simde_vceqq_u16
#define u16x8_less_than simde_vcltq_u16
#define u16x8_greater_than simde_vcgtq_u16
#define u16x8_get_low simde_vget_low_u16
#define u16x8_get_high simde_vget_high_u16
#define u16x8_shrn simde_vshrn_n_u16

#define i16x4_load simde_vld1_s16
#define i16x4_store simde_vst1_s16
#define i16x4_splat simde_vdup_n_s16
#define i16x4_add simde_vadd_s16
#define i16x4_sub simde_vsub_s16
#define i16x4_mul simde_vmul_s16
#define i16x4_min simde_vmin_s16
#define i16x4_max simde_vmax_s16
#define i16x4_scale simde_vmul_n_s16
#define i16x4_add_pairs simde_vpadd_s16
#define i16x4_reverse64 simde_vrev64_s16
#define i16x4_and simde_vand_s16
#define i16x4_or simde_vorr_s16
#define i16x4_xor simde_veor_s16
#define i16x4_get_lane simde_vget_lane_s16
#define i16x4_set_lane simde_vset_lane_s16
#define i16x4_extract simde_vext_s16
#define i16x4_select simde_vbsl_s16
#define i16x4_add_across simde_vaddv_s16
#define i16x4_max_across simde_vmaxv_s16
#define i16x4_min_across simde_vminv_s16
#define i16x4_equal simde_vceq_s16
#define i16x4_less_than simde_vclt_s16
#define i16x4_greater_than simde_vcgt_s16
#define i16x4_combine simde_vcombine_s16
#define i16x4_abs simde_vabs_s16
#define i16x4_negate simde_vneg_s16

#define i16x8_load simde_vld1q_s16
#define i16x8_store simde_vst1q_s16
#define i16x8_splat simde_vdupq_n_s16
#define i16x8_add simde_vaddq_s16
#define i16x8_sub simde_vsubq_s16
#define i16x8_mul simde_vmulq_s16
#define i16x8_min simde_vminq_s16
#define i16x8_max simde_vmaxq_s16
#define i16x8_scale simde_vmulq_n_s16
#define i16x8_add_pairs simde_vpaddq_s16
#define i16x8_reverse64 simde_vrev64q_s16
#define i16x8_and simde_vandq_s16
#define i16x8_or simde_vorrq_s16
#define i16x8_xor simde_veorq_s16
#define i16x8_get_lane simde_vgetq_lane_s16
#define i16x8_set_lane simde_vsetq_lane_s16
#define i16x8_extract simde_vextq_s16
#define i16x8_select simde_vbslq_s16
#define i16x8_add_across simde_vaddvq_s16
#define i16x8_max_across simde_vmaxvq_s16
#define i16x8_min_across simde_vminvq_s16
#define i16x8_equal simde_vceqq_s16
#define i16x8_less_than simde_vcltq_s16
#define i16x8_greater_than simde_vcgtq_s16
#define i16x8_get_low simde_vget_low_s16
#define i16x8_get_high simde_vget_high_s16
#define i16x8_shrn simde_vshrn_n_s16
#define i16x8_abs simde_vabsq_s16
#define i16x8_negate simde_vnegq_s16

// --- 32-bit ---

#define u32x2_load simde_vld1_u32
#define u32x2_store simde_vst1_u32
#define u32x2_splat simde_vdup_n_u32
#define u32x2_add simde_vadd_u32
#define u32x2_sub simde_vsub_u32
#define u32x2_mul simde_vmul_u32
#define u32x2_min simde_vmin_u32
#define u32x2_max simde_vmax_u32
#define u32x2_scale simde_vmul_n_u32
#define u32x2_add_pairs simde_vpadd_u32
#define u32x2_reverse64 simde_vrev64_u32
#define u32x2_and simde_vand_u32
#define u32x2_or simde_vorr_u32
#define u32x2_xor simde_veor_u32
#define u32x2_get_lane simde_vget_lane_u32
#define u32x2_set_lane simde_vset_lane_u32
#define u32x2_extract simde_vext_u32
#define u32x2_select simde_vbsl_u32
#define u32x2_add_across simde_vaddv_u32
#define u32x2_max_across simde_vmaxv_u32
#define u32x2_min_across simde_vminv_u32
#define u32x2_equal simde_vceq_u32
#define u32x2_less_than simde_vclt_u32
#define u32x2_greater_than simde_vcgt_u32
#define u32x2_widen simde_vmovl_u32
#define u32x2_combine simde_vcombine_u32

#define u32x4_load simde_vld1q_u32
#define u32x4_store simde_vst1q_u32
#define u32x4_splat simde_vdupq_n_u32
#define u32x4_add simde_vaddq_u32
#define u32x4_sub simde_vsubq_u32
#define u32x4_mul simde_vmulq_u32
#define u32x4_min simde_vminq_u32
#define u32x4_max simde_vmaxq_u32
#define u32x4_scale simde_vmulq_n_u32
#define u32x4_add_pairs simde_vpaddq_u32
#define u32x4_reverse64 simde_vrev64q_u32
#define u32x4_and simde_vandq_u32
#define u32x4_or simde_vorrq_u32
#define u32x4_xor simde_veorq_u32
#define u32x4_get_lane simde_vgetq_lane_u32
#define u32x4_set_lane simde_vsetq_lane_u32
#define u32x4_extract simde_vextq_u32
#define u32x4_select simde_vbslq_u32
#define u32x4_add_across simde_vaddvq_u32
#define u32x4_max_across simde_vmaxvq_u32
#define u32x4_min_across simde_vminvq_u32
#define u32x4_equal simde_vceqq_u32
#define u32x4_less_than simde_vcltq_u32
#define u32x4_greater_than simde_vcgtq_u32
#define u32x4_get_low simde_vget_low_u32
#define u32x4_get_high simde_vget_high_u32
#define u32x4_shrn simde_vshrn_n_u32

#define i32x2_load simde_vld1_s32
#define i32x2_store simde_vst1_s32
#define i32x2_splat simde_vdup_n_s32
#define i32x2_add simde_vadd_s32
#define i32x2_sub simde_vsub_s32
#define i32x2_mul simde_vmul_s32
#define i32x2_min simde_vmin_s32
#define i32x2_max simde_vmax_s32
#define i32x2_scale simde_vmul_n_s32
#define i32x2_add_pairs simde_vpadd_s32
#define i32x2_reverse64 simde_vrev64_s32
#define i32x2_and simde_vand_s32
#define i32x2_or simde_vorr_s32
#define i32x2_xor simde_veor_s32
#define i32x2_get_lane simde_vget_lane_s32
#define i32x2_set_lane simde_vset_lane_s32
#define i32x2_extract simde_vext_s32
#define i32x2_select simde_vbsl_s32
#define i32x2_add_across simde_vaddv_s32
#define i32x2_max_across simde_vmaxv_s32
#define i32x2_min_across simde_vminv_s32
#define i32x2_equal simde_vceq_s32
#define i32x2_less_than simde_vclt_s32
#define i32x2_greater_than simde_vcgt_s32
#define i32x2_combine simde_vcombine_s32
#define i32x2_abs simde_vabs_s32
#define i32x2_negate simde_vneg_s32

#define i32x4_load simde_vld1q_s32
#define i32x4_store simde_vst1q_s32
#define i32x4_splat simde_vdupq_n_s32
#define i32x4_add simde_vaddq_s32
#define i32x4_sub simde_vsubq_s32
#define i32x4_mul simde_vmulq_s32
#define i32x4_min simde_vminq_s32
#define i32x4_max simde_vmaxq_s32
#define i32x4_scale simde_vmulq_n_s32
#define i32x4_add_pairs simde_vpaddq_s32
#define i32x4_reverse64 simde_vrev64q_s32
#define i32x4_and simde_vandq_s32
#define i32x4_or simde_vorrq_s32
#define i32x4_xor simde_veorq_s32
#define i32x4_get_lane simde_vgetq_lane_s32
#define i32x4_set_lane simde_vsetq_lane_s32
#define i32x4_extract simde_vextq_s32
#define i32x4_select simde_vbslq_s32
#define i32x4_add_across simde_vaddvq_s32
#define i32x4_max_across simde_vmaxvq_s32
#define i32x4_min_across simde_vminvq_s32
#define i32x4_equal simde_vceqq_s32
#define i32x4_less_than simde_vcltq_s32
#define i32x4_greater_than simde_vcgtq_s32
#define i32x4_get_low simde_vget_low_s32
#define i32x4_get_high simde_vget_high_s32
#define i32x4_shrn simde_vshrn_n_s32
#define i32x4_abs simde_vabsq_s32
#define i32x4_negate simde_vnegq_s32

// --- float 32 ---

#define f32x2_load simde_vld1_f32
#define f32x2_store simde_vst1_f32
#define f32x2_splat simde_vdup_n_f32
#define f32x2_add simde_vadd_f32
#define f32x2_sub simde_vsub_f32
#define f32x2_mul simde_vmul_f32
#define f32x2_min simde_vmin_f32
#define f32x2_max simde_vmax_f32
#define f32x2_scale simde_vmul_n_f32
#define f32x2_add_pairs simde_vpadd_f32
#define f32x2_reverse64 simde_vrev64_f32
#define f32x2_div simde_vdiv_f32
#define f32x2_floor simde_vrndm_f32
#define f32x2_ceil simde_vrndp_f32
#define f32x2_round simde_vrndn_f32
#define f32x2_scale_add simde_vmla_n_f32
#define f32x2_get_lane simde_vget_lane_f32
#define f32x2_set_lane simde_vset_lane_f32
#define f32x2_extract simde_vext_f32
#define f32x2_select simde_vbsl_f32
#define f32x2_add_across simde_vaddv_f32
#define f32x2_max_across simde_vmaxv_f32
#define f32x2_min_across simde_vminv_f32
#define f32x2_equal simde_vceq_f32
#define f32x2_less_than simde_vclt_f32
#define f32x2_greater_than simde_vcgt_f32
#define f32x2_combine simde_vcombine_f32
#define f32x2_abs simde_vabs_f32
#define f32x2_negate simde_vneg_f32

#define f32x4_load simde_vld1q_f32
#define f32x4_store simde_vst1q_f32
#define f32x4_splat simde_vdupq_n_f32
#define f32x4_add simde_vaddq_f32
#define f32x4_sub simde_vsubq_f32
#define f32x4_mul simde_vmulq_f32
#define f32x4_min simde_vminq_f32
#define f32x4_max simde_vmaxq_f32
#define f32x4_scale simde_vmulq_n_f32
#define f32x4_add_pairs simde_vpaddq_f32
#define f32x4_reverse64 simde_vrev64q_f32
#define f32x4_div simde_vdivq_f32
#define f32x4_floor simde_vrndmq_f32
#define f32x4_ceil simde_vrndpq_f32
#define f32x4_round simde_vrndnq_f32
#define f32x4_scale_add simde_vmlaq_n_f32
#define f32x4_get_lane simde_vgetq_lane_f32
#define f32x4_set_lane simde_vsetq_lane_f32
#define f32x4_extract simde_vextq_f32
#define f32x4_select simde_vbslq_f32
#define f32x4_add_across simde_vaddvq_f32
#define f32x4_max_across simde_vmaxvq_f32
#define f32x4_min_across simde_vminvq_f32
#define f32x4_equal simde_vceqq_f32
#define f32x4_less_than simde_vcltq_f32
#define f32x4_greater_than simde_vcgtq_f32
#define f32x4_get_low simde_vget_low_f32
#define f32x4_get_high simde_vget_high_f32
#define f32x4_abs simde_vabsq_f32
#define f32x4_negate simde_vnegq_f32

}  // namespace a
